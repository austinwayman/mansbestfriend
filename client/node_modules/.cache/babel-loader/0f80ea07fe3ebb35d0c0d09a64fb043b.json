{"ast":null,"code":"import _defineProperty from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Austin/Desktop/mansbestfriend/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Austin/Desktop/mansbestfriend/client/src/pages/Posting.jsx\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Posting from \"../components/Posting/posting\";\nimport CommentCard from \"../components/CommentCard/commentcard\";\nimport Input from \"../components/Input/Input\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nvar Post =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Post, _Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: [],\n      modal: false,\n      name: \"\",\n      comment: \"\"\n    };\n\n    _this.handleNameChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleCommentChange = function (event) {\n      var _event$target2 = event.target,\n          name = _event$target2.name,\n          value = _event$target2.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.getPost = function () {\n      API.getThisPost(_this.props.match.params.postID).then(function (result) {\n        return _this.setState({\n          selected: [result.data]\n        });\n      });\n    };\n\n    _this.toggle = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getPost();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Add Thread\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Input, {\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleNameChange,\n        placeholder: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Input, {\n        name: \"comment\",\n        value: this.state.comment,\n        onChange: this.handleCommentChange,\n        placeholder: \"Comment\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        value: this.props.match.params.postID,\n        color: \"primary\",\n        onClick: this.handleThreadSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Post Comment\"), ' ', React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Cancel\")))), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, console.log(this.state.selected), this.state.selected.map(function (post) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(Posting, {\n          title: post.title,\n          category: post.category,\n          content: post.content,\n          toggle: _this2.toggle,\n          id: post._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }), post.comment.map(function (comments) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(CommentCard, {\n            name: comments.name,\n            comment: comments.comment,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }), comments.comment2.map(function (comments2) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99\n              },\n              __self: this\n            }, React.createElement(CommentCard, {\n              name: comments2.name,\n              comment: comments2.comment,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }), comments2.comment3.map(function (comments3) {\n              return React.createElement(CommentCard, {\n                name: comments3.name,\n                comment: comments3.comment,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108\n                },\n                __self: this\n              });\n            }));\n          }));\n        }));\n      })));\n    }\n  }]);\n\n  return Post;\n}(Component);\n\nexport default Post;","map":{"version":3,"sources":["/Users/Austin/Desktop/mansbestfriend/client/src/pages/Posting.jsx"],"names":["React","Component","API","Posting","CommentCard","Input","Button","Modal","ModalHeader","ModalBody","ModalFooter","Post","state","selected","modal","name","comment","handleNameChange","event","target","value","setState","handleCommentChange","getPost","getThisPost","props","match","params","postID","then","result","data","toggle","handleThreadSubmit","console","log","map","post","title","category","content","_id","comments","comment2","comments2","comment3","comments3"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Posting from \"../components/Posting/posting\"\nimport CommentCard from \"../components/CommentCard/commentcard\"\nimport Input from \"../components/Input/Input\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass Post extends Component {\n    state = {\n        selected: [],\n        modal: false,\n        name : \"\",\n        comment : \"\"\n    }\n\n\n    componentWillMount() {\n        this.getPost()\n    }\n\n    handleNameChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        }); \n    }\n\n    handleCommentChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n          [name]: value\n        }); \n    }\n\n    getPost = () => {\n\n        API.getThisPost(this.props.match.params.postID)\n            .then(result => this.setState({ selected: [result.data] }))\n\n    }\n\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n\n    render() {\n\n        return (\n\n            <div>\n                  <div>\n                    <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                        <ModalHeader>Add Thread</ModalHeader>\n                        <ModalBody>\n                            <Input name=\"name\" value = {this.state.name} onChange = {this.handleNameChange} placeholder=\"Name\" />\n                            <Input name=\"comment\" value = {this.state.comment} onChange = {this.handleCommentChange} placeholder=\"Comment\" />\n                            </ModalBody>\n                        <ModalFooter>\n                            <Button value = {this.props.match.params.postID} color=\"primary\" onClick={this.handleThreadSubmit}>Post Comment</Button>{' '}\n                            <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n\n                <div className=\"container\">\n\n                    {console.log(this.state.selected)}\n\n                     \n\n\n                    {\n\n                        this.state.selected.map(post => {\n\n\n                            return (\n\n                                <div>\n\n                                    <Posting title={post.title} category={post.category} content={post.content} toggle = {this.toggle} id = {post._id} />\n\n\n                                    {\n                                        post.comment.map(comments => {\n\n                                            return (\n\n                                                <div>\n                                                    <CommentCard name={comments.name} comment={comments.comment} />\n\n                                                    {\n                                                        comments.comment2.map(comments2 => {\n                                                            return (\n\n                                                                <div>\n\n                                                                    <CommentCard name={comments2.name} comment={comments2.comment} />\n\n                                                                    {\n\n                                                                        comments2.comment3.map(comments3 => {\n\n                                                                            return (\n                                                                                <CommentCard name={comments3.name} comment={comments3.comment} />\n                                                                            )\n\n\n\n                                                                        })\n\n\n                                                                    }\n\n                                                                </div>\n\n\n\n                                                            )\n                                                        })\n\n                                                    }\n                                                </div>\n\n                                            )\n                                        })\n                                    }\n                                </div>\n\n\n                            )\n                        })\n\n                    }\n\n                </div>\n\n            </div>\n\n        )\n\n    }\n\n}\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}